# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "livequery_models"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "livequery"

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

models:
  livequery_models:
    deploy:
      +materialized: ephemeral
      core:
        +tags: core
        secrets:
          +enabled: '{{ true if env_var("ENABLE_SNOWFLAKE_SECRETS", "") else false }}'
      evm:
        +tags: evm
        silver:
          streamline:
            +materialized: ephemeral
            +enabled: true
      marketplace:
        +tags: marketplace
      near:
        silver:
          streamline:
            +schema: near_mainnet
            +enabled: true
  near_models:
    +schema: streamline
    +database: near_dev
    gold:
      core:
        +schema: core
        +materialized: ephemeral
        +enabled: false
        core__fact_blocks:
          +enabled: true
      stats:
        +enabled: false
    silver:
      streamline:
        +materialized: ephemeral
        silver__streamline_blocks:
          +enabled: false
      stats:
        +enabled: false
  fsc_evm:
    +enabled: false # disable fsc_evm package by default
    +copy_grants: true
    +persist_docs:
      relation: true
      columns: true
    +on_schema_change: "append_new_columns"
    main_package:
      +enabled: false # disable main_package by default, enabled other packages as needed
      core:
        +enabled: false # enable subpackages, as needed
        gold:
          +enabled: false
          +materialized: ephemeral
          core__fact_blocks:
            +enabled: true
        silver:
          +materialized: ephemeral
          silver__blocks:
            +enabled: false
          tests:
            +enabled: false
          streamline:
            +enabled: false
      github_actions:
        +enabled: true
      labels:
        +enabled: true
      prices:
        +enabled: true
      utils:
        +enabled: true
    decoder_package:
      +enabled: false
      abis:
        +enabled: false
      decoded_logs:
        +enabled: false
    curated_package:
      +enabled: false
      protocols:
        +enabled: false
        vertex:
          +enabled: false

tests:
  +store_failures: true # all tests
  livequery_models:
    deploy:
      marketplace:
        blockpour:
          # TODO: enable tests for blockpour once we get an API key
          +enabled: false
  near_models:
    silver:
      +enabled: false

on-run-start:
  - "{{ create_sps() }}"

on-run-end:
  - "{{ apply_meta_as_tags(results) }}"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

vars:
  near_models:
    UPDATE_UDFS_AND_SPS: false

  "dbt_date:time_zone": GMT
  LQ_UPDATE_UDFS_AND_SPS: false
  DROP_UDFS_AND_SPS: false
  UPDATE_SNOWFLAKE_TAGS: true
  STREAMLINE_INVOKE_STREAMS: False
  STREAMLINE_USE_DEV_FOR_EXTERNAL_TABLES: False
  STUDIO_TEST_USER_ID: '{{ env_var("STUDIO_TEST_USER_ID", "98d15c30-9fa5-43cd-9c69-3d4c0bb269f5") }}'

  API_INTEGRATION: '{{ var("config")[target.name]["API_INTEGRATION"] }}'
  EXTERNAL_FUNCTION_URI: '{{ var("config")[target.name]["EXTERNAL_FUNCTION_URI"] }}'
  ROLES: '{{ var("config")[target.name]["ROLES"] }}'

  config:
  # The keys correspond to dbt profiles and are case sensitive
    dev:
      API_INTEGRATION: AWS_LIVE_QUERY_STG
      EXTERNAL_FUNCTION_URI: u5z0tu43sc.execute-api.us-east-1.amazonaws.com/stg/
      ROLES:
        - INTERNAL_DEV
    prod:
      API_INTEGRATION: AWS_LIVE_QUERY
      EXTERNAL_FUNCTION_URI: bqco8lkjsb.execute-api.us-east-1.amazonaws.com/prod/
      ROLES:
        - VELOCITY_INTERNAL
        - VELOCITY_ETHEREUM
        - INTERNAL_DEV
        - BI_ANALYTICS_READER
    hosted:
      API_INTEGRATION: AWS_LIVEQUERY
      EXTERNAL_FUNCTION_URI: dlcb3tpiz8.execute-api.us-east-1.amazonaws.com/hosted/
      ROLES:
        - DATA_READER
