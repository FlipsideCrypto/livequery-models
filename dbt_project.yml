# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "livequery_models"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "livequery"

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
# test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

models:
  livequery_models:
    deploy:
      +materialized: ephemeral
      core:
        +tags: core
      evm:
        +tags: evm
      marketplace:
        +tags: marketplace

tests:
  +store_failures: true # all tests

on-run-start:
  - "{{ create_sps() }}"

on-run-end:
  - "{{ apply_meta_as_tags(results) }}"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

vars:
  "dbt_date:time_zone": GMT
  UPDATE_UDFS_AND_SPS: false
  DROP_UDFS_AND_SPS: false
  UPDATE_SNOWFLAKE_TAGS: true
  STREAMLINE_INVOKE_STREAMS: False
  STREAMLINE_USE_DEV_FOR_EXTERNAL_TABLES: False
  REST_API_PREFIX_PROD: bqco8lkjsb.execute-api.us-east-1.amazonaws.com/prod/
  REST_API_PREFIX_DEV: u5z0tu43sc.execute-api.us-east-1.amazonaws.com/stg/
  API_INTEGRATION: AWS_LIVE_QUERY{{ '_STG' if target.name != 'prod' else ''  }}
  AWS_REGION: us-east-1
  STUDIO_TEST_USER_ID: 98d15c30-9fa5-43cd-9c69-3d4c0bb269f5
