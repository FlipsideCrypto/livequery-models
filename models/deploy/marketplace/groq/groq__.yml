version: 2
models:
  - name: groq__
    columns:
      - name: chat_completions
        tests:
          - test_udf:
              name: test_groq__chat_completions_simple
              args: >
                [{'role': 'user', 'content': 'Hello, how are you?'}],
                'test-api-key'
              assertions:
                - result:choices IS NOT NULL
                - result:model IS NOT NULL
          - test_udf:
              name: test_groq__chat_completions_with_model
              args: >
                'llama3-8b-8192',
                [{'role': 'user', 'content': 'Hello, how are you?'}],
                100,
                'test-api-key'
              assertions:
                - result:choices IS NOT NULL
                - result:model = 'llama3-8b-8192'
          - test_udf:
              name: test_groq__chat_completions_full_params
              args: >
                'llama3-8b-8192',
                [{'role': 'user', 'content': 'Hello, how are you?'}],
                100,
                0.5,
                0.95,
                0.0,
                0.0,
                'test-api-key'
              assertions:
                - result:choices IS NOT NULL
                - result:model = 'llama3-8b-8192'

      - name: quick_chat
        tests:
          - test_udf:
              name: test_groq__quick_chat_single_message
              args: >
                'Hello, how are you?',
                'test-api-key'
              assertions:
                - result:choices IS NOT NULL
          - test_udf:
              name: test_groq__quick_chat_with_system
              args: >
                'You are a helpful assistant.',
                'Hello, how are you?',
                'test-api-key'
              assertions:
                - result:choices IS NOT NULL


      - name: extract_response_text
        tests:
          - test_udf:
              name: test_groq__extract_response_text
              args: >
                {'choices': [{'message': {'content': 'Hello there!'}}]}
              assertions:
                - result = 'Hello there!'
          - test_udf:
              name: test_groq__extract_response_text_error
              args: >
                {'error': {'message': 'API Error occurred'}}
              assertions:
                - result = 'API Error occurred'

      - name: post
        tests:
          - test_udf:
              name: test_groq_utils__post_health_check
              args: >
                '/openai/v1/models',
                {},
                'test-api-key'
              assertions:
                - result:data IS NOT NULL